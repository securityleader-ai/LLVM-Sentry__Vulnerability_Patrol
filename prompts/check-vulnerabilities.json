{
    "task": "Analyze the provided code for security vulnerabilities and provide actionable recommendations, including WAF rules for common WAFs, Suricata, and YARA rules where applicable.",
    "code": "```\n[Insert Code Here]\n```",
    "language": "[Programming Language of the Code]",
    "framework": "[Framework Used, if any]",
    "standards": [
      "OWASP Top 10",
      "CWE",
      "SANS Top 25",
      "MITRE ATT&CK"
    ],
    "context": {
      "application_type": "[Web Application, Mobile App, API, etc.]",
      "deployment_environment": "[Cloud, On-Premise, Hybrid]",
      "user_base": "[Public, Private, Internal]",
      "security_controls": "[Existing Security Measures, e.g., WAF, IAM, etc.]"
    },
    "threat_model": {
      "threats": [
        "SQL injection",
        "Cross-site scripting (XSS)",
        "Authentication bypass",
        "Authorization bypass",
        "File inclusion",
        "Directory traversal",
        "Remote code execution",
        "Denial of service"
      ],
      "attack_vectors": [
        "Web forms",
        "API endpoints",
        "Database interactions",
        "File uploads",
        "Network traffic"
      ]
    },
    "security_best_practices": [
      "Use parameterized queries to prevent SQL injection",
      "Validate user input to prevent cross-site scripting (XSS)",
      "Implement strong authentication and authorization mechanisms",
      "Sanitize user input before processing",
      "Encode output to prevent XSS",
      "Use secure libraries and frameworks",
      "Regularly update software and dependencies",
      "Implement a secure development lifecycle (SDLC)"
    ],
    "refactoring_suggestions": true,
    "remediation_level": "intermediate",
    "waf_rules": {
      "modsecurity": [
        "Example ModSecurity rule for SQL injection prevention",
        "Example ModSecurity rule for XSS prevention"
      ],
      "suricata": [
        "Example Suricata rule for SQL injection detection",
        "Example Suricata rule for XSS detection"
      ]
    },
    "yara_rules": {
      "malware_detection": [
        "Example YARA rule for detecting malicious code patterns",
        "Example YARA rule for detecting known malware signatures"
      ],
      "exploit_detection": [
        "Example YARA rule for detecting exploit signatures",
        "Example YARA rule for detecting specific exploit payloads"
      ]
    },
    "output_format": "JSON",
    "output_fields": [
      "vulnerability_type",
      "description",
      "severity",
      "CWE_ID",
      "OWASP_ID",
      "affected_code_snippet",
      "remediation_advice",
      "references",
      "waf_rule_modsecurity",
      "waf_rule_suricata",
      "yara_rule_malware_detection",
      "yara_rule_exploit_detection",
      "refactoring_suggestions"
    ]
  }